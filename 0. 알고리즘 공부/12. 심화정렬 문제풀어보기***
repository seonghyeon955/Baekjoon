1. 문자열 정렬(https://www.acmicpc.net/problem/1181)
알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 정렬하는 프로그램을 작성하시오.

1-길이가 짧은 것부터
2-길이가 같으면 사전 순으로

입력
첫째 줄에 단어의 개수 N이 주어진다. (1 ≤ N ≤ 20,000) 둘째 줄부터 N개의 줄에 걸쳐 알파벳 소문자로 이루어진 단어가 한 줄에 하나씩 주어진다. 주어지는 문자열의 길이는 50을 넘지 않는다.

출력
조건에 따라 정렬하여 단어들을 출력한다. 단, 같은 단어가 여러 번 입력된 경우에는 한 번씩만 출력한다.

예제 입력 1 
13
but
i
wont
hesitate
no
more
no
more
it
cannot
wait
im
yours


예제 출력 1 
i
im
it
no
but
more
wait
wont
yours
cannot
hesitate

풀이)


public class Main{
  public static void main(String[]args) throws IOException{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int N = Integer.parseInt(br.readLine());
    int[]arr = new int[N];
    for(int i=0; i<N ; i++){
      arr[i] = br.readLine();
    }
    
    Arrays.sort(arr, new Comparator<String>(){
      public int compare(String s1, String s2){
        if(s1.length == s2.length){//자릿수 길이가 동일할때
          return s1.compareTo(s2);
          /*compareTo : 2개의 문자열을 비교하고 int형 값을 반환하는 메소드( A.compareTo(B) )
                        A=B 일시 0, 
                        A>B 양수 -> String객체가 사전적으로 인수캐릭터보다 뒤에 있는 경우
                        A<B 음수 반환. -> String객체가 사전적으로 인수캐릭터보다 전에 있는 경우
                        맨 첫자리부터 차례대로 비교
            */
            
        }else{
        return s1.length() - s2.length();
        }//if end
      }//compare end
    )};// sort end
    
    StringBuilder sb =  new StringBuilder();
    sb.apprnd(arr[0]).apprnd('\n');
    for(int i=1; i<N ; i++){
      sb.apprnd(arr[i]).append('\n');
    }
  }
  System.out.println(sb);
}
