선택정렬 - 가장 작은 값을 선택하여 앞으로 보내는 것

q. 다음 숫자들을 오름차순으로 정렬하는 프로그램을 작성하라
   1 10 5 8 7 6 4 3 2 9
   
   #include <stdio.h>
   
   int main(void){
    int i, j, min, index, temp; //index : 가장 작은 원소가 존재하는 인덱스
    int arr[10] = {1, 10, 5, 8, 7, 6, 4, 3, 2, 9};
    
    for(int i=0; i<arr.length; i++){ //처음엔 0~10까지, 다음엔 1~10까지, 다음엔 2~10까지 ...
      min = 9999; // 항상 최솟값을 선택해야 하므로 큰값을 넣어줌
      for(int j=i; j<arr[i].length; j++){
        if(min >  arr[j]){
        min = arr[j];
        index = j; //최솟값이 위치하는 인덱스
        } //if end
      }//작은 for문 end
    temp = arr[i];
    arr[i] = arr[j]; //맨 처음엔 i=0이므로 0번째 인덱스의 자리에 위치하는 최솟값
    arr[j] = temp; // temp를 이용하여 최솟값과 현 인덱스의 위치를 바꿔준다.
   }// 큰 for문 end
   
   for(int i=0; i<arr.length; i++){
    printf("%d", arr[i]);
   }
   return 0;
   }
   
   
   
   ** 비교연산이 진행되는 횟수
   ex) 1~10까지 라면 -> 10 + 9 + 8 + 7 + ..... 1 = 등차수열
       = 10 * (10 + 1) / 2 = 55번의 비교연산이 필요
       = n *  (n +  1 ) / 2 
       = O(N*N) 빅오 표기법 : 특정한 알고리즘의 총 연산횟수를 간략히 표현 한 것.
       -> 선택정렬의 시간복잡도는 O(N^2) 0의 N제곱으로 비효율적이다.
       
       
       
