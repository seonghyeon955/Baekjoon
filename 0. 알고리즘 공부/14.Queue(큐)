Queue(큐)
-먼저 들어온 데이터가 가장 먼저 나감.(FIFO : First In First Out)
-데이터를 일시적으로 쌓아두기 위함
-비슷한 모양 : 터널
-한쪽 끝은 프런트(front)로 정하여 삭제연산만, 다른 한 쪽은 리어(rear)로 정하여 삽입 연산만 수행
-그래프의 널빙 우선 탐색(BFS)에서 사용
-컴퓨터 버퍼에서 주로 사용. 마구 입력이 되었으나 처리를 하지 못할때 버퍼(큐)를 만들어 데이터를 대기시킨다.

Queue 인터페이스를 구현한 대표적인 클래스 : LinkedList.(List 인터페이스를 구현했기 때문에 List컬렉션 이기도 함)
자바의 queue는 Linkedlist를 활용하여 생성함. -> 둘다 import 필수
선언방법 : Queue<Element> queue = new LinkedList<>();

import java.util.LinkedList; // import
import java.util.Queue; //import 
Queue<Integer> queue = new LinkedList<>(); //int형 queue선언, linkedlist이용
Queue<String> queue = new LinkedList<>();// String형 queue선언, linkedlist이용



Queue<Integer> queue = new LinkedList<>(); // int형 Queue선언

-값 삽입(add,offer)
queue.add(1);
queue.offer(2);
// add(value) 또는 offer(value) 메서드를 활용하여 값을 추가
// add(value) : 삽입 성공시 true, 큐에 여유공간이 없어 삽입 실패시 IllegalStateException 반환

-값 삭제(poll,remove)
queue.poll(); //queue의 첫번째 값을 반환+제거. 비어있다면 null
queue.remove(); //queue의 첫번째 값을 제거.
queue.clear(); //queue 초기화

-값 출력(peek)
queue.peek(); //queue의 첫번째 값 참조, 값 제거X

**Queue는 인덱스를 통해 값을 가져오는 메소드가 없다
** 인덱스를 통해 값을 확인하고 싶다면 ArrayList를 이용.

예시)

[Message.java]
public class Message{
  public String command;
  public String to;
  
  public Message(String command, String to){
    this.command = command;
    this.to = to;
  }
}

[QueueExample.java]

import java.util.LinkedList;
import java.util.Queue;

public class QueueExample{
  public static void main(String[]args){
    Queue<Message> queue = new LinkedList<>();
    
    queue.offer(new Message("sendMail", "no.1"));
    queue.offer(new Message("sendSMS", "no.2"));
    queue.offer(new Message("sendKakaotalk", "no.3"));
    
    while(!queue.isEmpty()){
      Message message = queue.poll(); 
      switch(message.command){
        case "semdMail":
        System.out.println(message.to + "님에게 메일을 보냅니다.");
        break;
        
        case"sendSMS":
        System.out.println(message.to+ "님에게 sms를 보냅니다.");
        break;
        
        case "sendkaKaotalk":
        System.out.println(message.to + "님에게 카톡을 보냅니다.");
        break;
      }
    
    }
    
  }

}





